{"version":3,"sources":["../../../../Projects/Thinkful/streams/number.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAEA,IAAM,WAAW,QAAQ,QAAR,EAAkB,QAAnC;;IAEM,Y;;;AACF,0BAAY,OAAZ,EAAqB;AAAA;;AAAA,oGACX,OADW;;AAEjB,cAAK,MAAL,GAAc,EAAd;AACA,cAAK,GAAL,GAAW,CAAX;AACA,cAAK,GAAL,GAAW,GAAX;AACA,cAAK,IAAL,GAAY,MAAK,GAAL,GAAW,MAAK,GAA5B;AALiB;AAMpB;;;;gCAEO;AACJ;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AAClC,oBAAI,SAAS,KAAK,KAAL,CAAW,KAAK,MAAL,KAAiB,KAAK,IAAjC,IAA0C,KAAK,GAA5D;AACA,oBAAI,MAAM,OAAO,IAAP,CAAY,OAAO,QAAP,EAAZ,EAA+B,MAA/B,CAAV;AACA,qBAAK,IAAL,CAAU,GAAV;AACH;AACD;AACA,iBAAK,IAAL,CAAU,IAAV;AACH;;;;EAlBsB,Q;;AAqB3B,OAAO,OAAP,GAAiB,YAAjB","file":"number-compiled.js","sourcesContent":["\"use strict\";\n\nconst Readable = require('stream').Readable;\n\nclass RandomNumber extends Readable {\n    constructor(options) {\n        super(options);\n        this.length = 10;\n        this.min = 0;\n        this.max = 999;\n        this.diff = this.max - this.min;\n    }\n\n    _read() {\n        // get some random numbers and store in the buffer\n        for (let i = 0; i < this.length; i++) {\n            let number = Math.floor(Math.random() * (this.diff)) + this.min;\n            let buf = Buffer.from(number.toString(), 'utf8');\n            this.push(buf);\n        }\n        // mark the end of the readable data\n        this.push(null);\n    }\n}\n\nmodule.exports = RandomNumber;"]}