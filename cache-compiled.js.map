{"version":3,"sources":["../../../../Projects/Thinkful/streams/cache.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AACA,IAAM,WAAW,QAAQ,QAAR,EAAkB,QAAnC;;IAEM,K;;;AACF,mBAAY,GAAZ,EAAiB,OAAjB,EAA0B;AAAA;;AAAA,6FAChB,OADgB;;AAEtB,cAAK,IAAL,GAAY,GAAZ;AACA,cAAK,MAAL,GAAc,IAAd;AACA,cAAK,EAAL,CAAQ,QAAR,EAAkB,YAAY;AAC1B,kBAAM,KAAN,CAAY,KAAK,IAAjB,IAAyB,KAAK,MAA9B;AACH,SAFD;AAJsB;AAOzB;;;;+BAEM,K,EAAO,Q,EAAU,Q,EAAU;AAC9B;AACA,gBAAI,CAAC,KAAK,MAAV,EAAkB;AACd,qBAAK,MAAL,GAAc,KAAd;AACH;AACD;AAHA,iBAIK;AACD,yBAAK,MAAL,GAAc,OAAO,MAAP,CAAc,CAAC,KAAK,MAAN,EAAc,KAAd,CAAd,CAAd;AACH;AACD;AACH;;;;EApBe,Q;;AAuBpB,MAAM,KAAN,GAAc,EAAd;;AAEA,OAAO,OAAP,GAAiB,KAAjB","file":"cache-compiled.js","sourcesContent":["\"use strict\";\nconst Writable = require('stream').Writable;\n\nclass Cache extends Writable {\n    constructor(key, options) {\n        super(options);\n        this._key = key;\n        this._value = null;\n        this.on('finish', function () {\n            Cache.store[this._key] = this._value;\n        });\n    }\n\n    _write(chunk, encoding, callback) {\n        // if no data exists in the buffer...\n        if (!this._value) {\n            this._value = chunk;\n        }\n        // if data is already present in the buffer...\n        else {\n            this._value = Buffer.concat([this._value, chunk]);\n        }\n        callback();\n    }\n}\n\nCache.store = {};\n\nmodule.exports = Cache;\n"]}